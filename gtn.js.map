{"version":3,"sources":["../src/gtn.js"],"names":["g","say","start","intro","loop","low","high","chances","setChances","ask","guess","options","guessesNeeded","push","random","choice","Math","min","max","recordLoss","actual","randint","gameOver","findLocalStorage","type","storage","window","x","setItem","removeItem","e","Journal","rewind","journal","index","data","JSON","parse","getItem","console","error","Array","isArray","log","stringify","label","args","entry","reset","location","reload","result","save","callback","_read","_write","Promise","Random","items","record","floor","length","GuessTheNumber","root","mouthAnimator","chancesContainer","chancesText","lossesContainer","lossesText","dialogText","dialogOk","inputForm","inputText","playAgainButton","losses","text","textContent","setTimeout","stop","style","display","promise","startDialog","focus","handleDialog","removeEventListener","resolve","addEventListener","question","value","handleInput","preventDefault","parseInt","isNaN","taunt","handlePlayAgain","MouthAnimator","mouth","semaphore","classList","remove","add","document","getElementById","contentDocument","range","i"],"mappings":"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","file":"gtn.js","sourcesContent":["'use strict'\n\n\nfunction findLocalStorage() {\n  for (let type of ['localStorage', 'sessionStorage']) {\n    try {\n      let storage = window[type]\n      let x = 'gtnStorageTest'\n      storage.setItem(x, x)\n      storage.removeItem(x)\n      return storage\n    } catch (e) {}\n  }\n  return null\n}\n\n\nclass Journal {\n  constructor(storage) {\n    this.storage = storage || findLocalStorage()\n    this.rewind()\n  }\n\n  rewind() {\n    this.journal = []\n    this.index = 0\n    let data = null\n    try {\n      data = JSON.parse(this.storage.getItem('gtnJournal'))\n    } catch (e) {\n      console.error(`Error while loading game: ${e}`)\n    }\n    if (Array.isArray(data)) {\n      this.journal = data\n    } else {\n      console.log(`No save data found; starting new game`)\n    }\n  }\n\n  save() {\n    try {\n      this.storage.setItem('gtnJournal', JSON.stringify(this.journal))\n    } catch (e) {\n      console.error(`Error while saving game: ${e}`)\n    }\n  }\n\n  reset() {\n    try {\n      this.journal = []\n      this.storage.removeItem('gtnJournal')\n    } catch (e) {\n      console.error(`Error while resetting game: ${e}`)\n    }\n  }\n\n  _read(label, args) {\n    // Try to replay an entry from the journal\n    let entry = this.journal[this.index]\n    if (entry) {\n      if (entry.label === label && JSON.stringify(entry.args) === JSON.stringify(args)) {\n        // Return the pre-computed result\n        ++this.index\n        return entry\n      } else {\n        // There's an entry here, but it doesn't match our game logic!\n        // Log the issue and keep going...\n        console.error(`Invalid log! Expected ${label}(${args}) but got ${entry.label}(${entry.args})`)\n        // Delete all entries since we know they're wrong\n        this.reset()\n        location.reload()\n      }\n    }\n    return null\n  }\n\n  _write(label, args, result) {\n    // Write an entry to the journal\n    this.journal[this.index] = { label, args, result }\n    ++this.index\n    this.save()\n  }\n\n  record(label, args, callback) {\n    let entry = this._read(label, args)\n    if (entry) {\n      return entry.result\n    } else {\n      let result = callback()\n      this._write(label, args, result)\n      return result\n    }\n  }\n\n  async promise(label, args, callback) {\n    let entry = this._read(label, args)\n    if (entry) {\n      return entry.result\n    } else {\n      let result = await new Promise(callback)\n      this._write(label, args, result)\n      return result\n    }\n  }\n}\n\n\nclass Random {\n  constructor(journal) {\n    this.journal = journal\n  }\n\n  choice(items) {\n    return this.journal.record('choice', [items], () =>\n      items[Math.floor(items.length * Math.random())])\n  }\n\n  randint(low, high) {\n    return this.journal.record('randint', [low, high], () =>\n      Math.floor((high - low + 1) * Math.random() + low))\n  }\n}\n\n\nclass GuessTheNumber {\n  constructor(journal, root, mouthAnimator, chancesContainer, chancesText, lossesContainer, lossesText, dialogText, dialogOk, inputForm, inputText, playAgainButton) {\n    this.journal = journal\n    this.root = root\n    this.mouthAnimator = mouthAnimator\n    this.chancesContainer = chancesContainer\n    this.chancesText = chancesText\n    this.lossesContainer = lossesContainer\n    this.lossesText = lossesText\n    this.dialogText = dialogText\n    this.dialogOk = dialogOk\n    this.inputForm = inputForm\n    this.inputText = inputText\n    this.playAgainButton = playAgainButton\n    this.setChances(null)\n    this.losses = 0\n    this.random = new Random(journal)\n  }\n\n  startDialog(text) {\n    this.dialogText.textContent = text\n    this.mouthAnimator.start()\n    setTimeout(() => this.mouthAnimator.stop(), 50 * text.length)\n  }\n\n  setChances(chances) {\n    if (chances === null) {\n      this.chancesContainer.style.display = 'none'\n    } else {\n      this.chancesContainer.style.display = 'block'\n      this.chancesText.textContent = chances\n    }\n  }\n\n  recordLoss() {\n    ++this.losses\n    this.lossesContainer.style.display = 'block'\n    this.lossesText.textContent = this.losses\n  }\n\n  say(text) {\n    return this.journal.promise('say', [text], resolve => {\n      this.startDialog(text)\n      this.dialogOk.style.display = 'block'\n      this.dialogOk.focus()\n      let handleDialog = () => {\n        this.dialogOk.style.display = 'none'\n        this.dialogOk.removeEventListener('click', handleDialog)\n        resolve()\n      }\n      this.dialogOk.addEventListener('click', handleDialog)\n    })\n  }\n\n  ask(question) {\n    return this.journal.promise('ask', [question], resolve => {\n      this.startDialog(question)\n      this.inputForm.style.display = 'block'\n      this.inputText.value = ''\n      this.inputText.focus()\n      let handleInput = e => {\n        e.preventDefault()\n        let guess = parseInt(this.inputText.value, 10)\n        if (isNaN(guess) || guess < 1 || guess > 100) return\n        this.inputForm.style.display = 'none'\n        this.inputForm.removeEventListener('submit', handleInput)\n        resolve(guess)\n      }\n      this.inputForm.addEventListener('submit', handleInput)\n    })\n  }\n\n  gameOver(taunt) {\n    return this.journal.promise('gameOver', [taunt], resolve => {\n      this.startDialog(taunt)\n      this.playAgainButton.style.display = 'block'\n      this.playAgainButton.focus()\n      let handlePlayAgain = e => {\n        this.playAgainButton.style.display = 'none'\n        this.playAgainButton.removeEventListener('click', handlePlayAgain)\n        resolve()\n      }\n      this.playAgainButton.addEventListener('click', handlePlayAgain)\n    })\n  }\n}\n\n\nclass MouthAnimator {\n  constructor(mouth) {\n    this.mouth = mouth\n    this.semaphore = 0\n    this.mouth.addEventListener('animationiteration', () => {\n      if (this.semaphore <= 0) this.mouth.classList.remove('mouth-moving')\n    })\n  }\n\n  // Start the animation, if it's not running already.\n  start() {\n    ++this.semaphore\n    if (this.semaphore > 0) this.mouth.classList.add('mouth-moving')\n  }\n\n  // Stop the animation before the next cycle.\n  stop() {\n    --this.semaphore\n  }\n}\n\n\nwindow.addEventListener('load', () => {\n  let journal = new Journal()\n  let root = document.getElementById('main')\n  let mouth = document.getElementById('face').contentDocument.getElementById('mouth')\n  let mouthAnimator = new MouthAnimator(mouth)\n  let chancesContainer = document.getElementById('chances')\n  let chancesText = document.getElementById('chances-text')\n  let lossesContainer = document.getElementById('losses')\n  let lossesText = document.getElementById('losses-text')\n  let dialogText = document.getElementById('dialog-text')\n  let dialogOk = document.getElementById('dialog-ok')\n  let inputForm = document.getElementById('input')\n  let inputText = document.getElementById('input-text')\n  let playAgainButton = document.getElementById('play-again')\n  let g = new GuessTheNumber(journal, root, mouthAnimator, chancesContainer, chancesText, lossesContainer, lossesText, dialogText, dialogOk, inputForm, inputText, playAgainButton)\n  window.g = g\n  intro(g)\n})\n\n\nasync function intro(g) {\n  await g.say(`Welcome to the Number Guessing Game!`)\n  await g.say(`I'm thinking of a number from 1 through 100.`)\n  await start(g)\n}\n\n\nasync function start(g) {\n  await loop(g, { low: 1, high: 100, chances: 5 })\n}\n\n\nasync function loop(g, { low, high, chances }) {\n  g.setChances(chances)\n  if (chances) {\n    let guess = await g.ask(`What is your guess?`)\n    // We can either respond \"too high\" or \"too low\".\n    // But we don't want to put ourselves in a tight spot.\n    // For example, if the user guesses 99 on their first turn, we don't\n    // want to say \"too low\"; because then they'll win on the next turn.\n    // So we first do some arithmetic to determine which of the two choices\n    // are safe.\n    let options = []\n    if (guessesNeeded(low, guess - 1) >= chances - 1) options.push('toohigh')\n    if (guessesNeeded(guess + 1, high) >= chances - 1) options.push('toolow')\n    switch (g.random.choice(options)) {\n      case 'toohigh':\n        await g.say(`Too high!`)\n        await loop(g, {\n          low,\n          high: Math.min(high, guess - 1),\n          chances: chances - 1\n        })\n      case 'toolow':\n        await g.say(`Too low!`)\n        await loop(g, {\n          low: Math.max(low, guess + 1),\n          high,\n          chances: chances - 1\n        })\n    }\n  } else {\n    g.recordLoss()\n    let actual = g.random.randint(low, high)\n    await g.say(`The number was actually... ${actual}!`)\n    await g.gameOver(`Would you like to play again?`)\n    await start(g)\n  }\n}\n\n\n// Calculate the minimum number of bisections needed to reduce [low, high] down\n// to a single element.\n//\n// Returns -1 when high < low.\nfunction guessesNeeded(low, high) {\n  if (high < low) return -1\n  let range = high - low + 1\n  let i\n  for (i = 0; range > 1; ++i) range = Math.floor((range - 1) / 2)\n  return i\n}\n"]}